library("swirl")
install.packages("swirl")
install.packages("dplyr")
library("swirl")
ls()
rm(list=ls())
ls()
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
group_by(cran)
group_by(cran, package)
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique>465)
View(top_unique)
top_unique_sortes <- arrange(top_unique, desc(unique))
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
libraray(tidyr)
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, key = sex_class, value = count)
res <- gather(students2, key = sex_class, value = count, -grade)
res
?separate
separate(res, col = sex_class, into = c("sex", "class"))
submit()
students3
submit()
?spread
submit()
library(readr)
parse_number("class5")
submit()
students4
submit()
submit()
submit()
passed
failed
passed <- mutate(status = "passed")
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
bind_rows(passed, failed)
sat
?contain
?contains
?select
submit()
submit()
submit()
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileURl, destfile ="./Q1.csv", method ="curl")
download.file(fileUrl, destfile ="./Q1.csv", method ="curl")
Df <-read.csv("./Q1.csv")
head(Df)
df <- tbl_df(Df)
agricultureLogical <- Df[(Df$ACR == 3 & Df$AGS == 6),]
which(agricultureLogical)
head(agricultureLogical)
agriculture1 <- Df[(Df$ACR==3),]
which(agriculture1)
?whihc
?which
Df[which(agriculture1)]
sort(agriculture1)
Df[which(agriculture1),]
class(Df$ACR)
class(Df$AGS)
Df[which(Df$ACR == 3 & Df$AGS == 6),]
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileUrl, destfile = "Q2.jpg", method = "curl")
quest <- readJPEG("Q2.jpg")
library(jpeg)
library("jpeg")
library("jpeg reader")
install.packages("jpeg")
library("jpeg")
quest <- readJPEG("Q2.jpg")
quest <- readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
download.file(fileUrl, destfile = "Q2.jpg")
fileUrl
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileUrl, destfile = "Q2.jpg")
quest <- readJPEG("Q2.jpg")
?readJPEG
quest <- readJPEG("Q2.jpg", native = TRUE)
quest
quest2 <- tbl_df(readJPEG("Q2.jpg", native = TRUE))
dim(quest)
quantile(180, 30)
quantile(180, probs=30)
quantile(180, probs=0.3)
?quantile
quantile(180, probs=0.8)
quantile(quest, probs=0.8)
quantile(quest, probs=0.3)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
fileUrl2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl, destfile = "Q3a.csv", method= "curl")
download.file(fileUrl2, destfile = "Q3b.csv", method= "curl")
df1 <- read.csv("Q3a.csv")
df2 <- read.csv("Q3b.csv")
head(df1)
head(df2)
df1[,X]
df1[,1]
df1 <- tbl_df(df1)
df1 <- read.csv("Q3a.csv")
GDP <- df1[, c(1,2)]
head(GDP)
6+190
GDP2
GDP2 <- GDP[6:196, ]
head(GDP2)
tail(GDP)
GDP2 <- GDP[5:195, ]
tail(GDP2)
head(GDP2)
GDP2 <- GDP[5:194, ]
names(GDP2)
GDP2$X
names(df2)
merged <- merge(GDP2, df2, by.x="X", by.y="CountryCode", all =TRUE)
head(merged)
m <- tbl_df(merged)
m2 <- arrange(m, "Gross.domestic.product.2012")
m
m <- as.integer(m$Gross.domestic.product.2012)
m
m <- tbl_df(merged)
mm$Gross.domestic.product.2012 <- as.integer(m$Gross.domestic.product.2012)
m$Gross.domestic.product.2012 <- as.integer(m$Gross.domestic.product.2012)
m
m2 <- arrange(m, "Gross.domestic.product.2012")
GDP2
m <- rename(m, rank = Gross.domestic.product.2012)
m <- arrange(m, desc(rank))
m
m[13,]
m[13,]
m[13,Long.Name]
m[13,"Long.Name"]
m[1]
m[1,]
tail(GDP2)
tail(m2)
tail(m)
head(m)
head(m, n=14)
GDP2$X
GDP2$X <- as.character(GDP2$X)
GDP2$X
df2 <- tbl_df(df2)
df2 <- rename(df2, X=CountryCode)
df2
df2$X <- as.character(df2$X)
GDP <- tbl_df(GDP2)
m <- join(GDP, df2)
library(plyr)
library(plyr); library(dplyr)
m <- join(GDP, df2)
nrow(m)
head(m)
tail(m)
arrange(m, desc(rank))
m
m2 <- tbl_df(m)
m2
GDP
m <- rename(m, rank = Gross.domestic.product.2012 )
head(m, n=1)
arrange(m, Gross.domestic.product.2012)
m2 <- arrange(m, Gross.domestic.product.2012)
m2
m2[13,c(2,3)]
m2 <- arrange(m, desc(Gross.domestic.product.2012))
m2[13,c(2,3)]
m2[1,c(2,3)]
nrows(m2)
nrow(m2)
df1a <- tbl_df(df1)
head(df1a)
df1a <- filter(-(1:4))
df1a <- filter(df1a, -(1:4))
df1a <- df1a[-c(1:4),]
head(df1a)
df1a <- rename( df1a, rank = Gross.domestic.product.2012)
df1a <- rename(df1a, rank = Gross.domestic.product.2012)
m <- merge(df1a, df2, by.x ="X", by.y= "CountryCode", all =TRUE)
names(df2)
m <- merge(df1a, df2, by.x ="X", by.y= "X", all =TRUE)
nrow(m)
?merge
m <- merge(df1a, df2, by.x ="X", by.y= "X", all =FALSE)
nrow(m)
m <- merge(GDP, df2, by.x ="X", by.y= "X", all =FALSE)
nrow(m)
m1 <-arrange(m, desc(Gross.domestic.product.2012))
m1[13,]
m1[1,]
m <- merge(df1a, df2, by.x ="X", by.y= "X", all =FALSE)
nrow(m)
m <- merge(GDP2, df2, by.x ="X", by.y= "X", all =FALSE)
nrow(m)
m1 <-arrange(m, desc(Gross.domestic.product.2012))
m1[13,]
m1[1,]
head(df1a)
tail(df1a)
GDP1 <- df1a[c(1:190),]
tail(GDP1)
GDP1 <- rename(GDP1 , Rank = Gross.domestic.product.2012)
?rename
m <- merge(GDP1, df2, by.x ="X", by.y= "X", all =FALSE)
nrow(m)
m1 <- arrange(m, desc(Gross.domestic.product.2012))
m1[1,]
nrow(df2)
df1
GDP1
tail(GDP1)
names(GDP1)
GDP <- select(GDP1, X, Gross.domestic.product.2012)
GDP <- rename(GDP, rank = Gross.domestic.product.2012)
m <- merge(GDP, df2, by.x ="X", by.y = "X", all = FALSE)
nrow(m)
m1 <- tbl_df(m)
m1 <- select(Gross.domestic.product.2012, Income.Group)
m1 <- select(m1,Gross.domestic.product.2012, Income.Group)
m1
m1$Gross.domestic.product.2012 <- as.integer(m1$Gross.domestic.product.2012)
sapply(m1, m1$Gross.domestic.product.2012, m1$Income.Group)
sapply(m1, mean, m1$Gross.domestic.product.2012)
m1
?sapply
sapply(m1$Gross.domestic.product.2012, mean)
lapply(m1$Gross.domestic.product.2012, mean)
tapply(m1$Gross.domestic.product.2012, m1$Income.Group,mean)
tapply(m1$Gross.domestic.product.2012, m1$Income.Group,mean)
mean(m1$Gross.domestic.product.2012)
summary(m1)
quantile(GDP%Gross.domestic.product.2012)
quantile(GDP%Gross.domestic.product.2012, na.rm=TRUE)
GDP
quantile(m1%Gross.domestic.product.2012, na.rm=TRUE)
m1
quantile(m1$Gross.domestic.product.2012, na.rm=TRUE)
GDP2
m <- merge(GDP2, df2, by.x ="X", by.y = "X", all = FALSE)
nrow(m)
m1 <- tbl_df(m)
m1 <- select(m1,Gross.domestic.product.2012, Income.Group)
summary(m1)
m1$Gross.domestic.product.2012 <- as.numeric(m1$Gross.domestic.product.2012)
m1
summary(m1)
m1 <- tbl_df(m)
m1 <- select(m1,Gross.domestic.product.2012, Income.Group)
m1
m1 <- tbl_df(m)
summary(m1)
m1 <- select(m1, X, Gross.domestic.product.2012, Income.Group)
m1
m1$Gross.domestic.product.2012 <- as.numeric(m1$Gross.domestic.product.2012)
m1
tail(m1)
arrange(m1, Gross.domestic.product.2012)
m1 <- tbl_df(m)
m1 <- select(m1, X, Gross.domestic.product.2012, Income.Group)
summary(m1)
m2 <- m1
m1$Gross.domestic.product.2012 <- as.character(m1$Gross.domestic.product.2012)
m1
m1$Gross.domestic.product.2012 <- as.integer(m1$Gross.domestic.product.2012)
m1
arrange(m1, Gross.domestic.product.2012)
tapply(m1$Gross.domestic.product.2012, m1$Income.Group,mean)
quantile(m1$Gross.domestic.product.2012, na.rm=TRUE)
x <- quantile(m1$Gross.domestic.product.2012, na.rm=TRUE)
table(x, m1$Income.Group)
library("swirl")
ls()
rm(list=ls())
swirl()
Sys,getlocale("LC_TIME")
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label =TRUE)
this_moment <- now()
this_moment
second(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes =34, seconds = 55)
this_moment
this_moment <- update(this_moment)
this_moment <- update(this_moment, hours = 10, minutes = 16, seconds =0)
this_moment
?now
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(hours = 17, minutes = 34)
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive<- with_tz(arrive, tzone="Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval
how_long <- interval(arrive, last_time)
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
library(swirl)
swirl()
library(tidyr)
skip()
skip()
skip()
skip()
skip()
skip()
library(swirl)
install_from_swirl("Exploratory Data Analysis")
library(swirl)
rm(list=ls())
install_from_swirl("Regression Models")
swirl()
cor(gpa_nor, gch_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
library(caret)
install.packages("caret")
install.packages("caret")
library(caret)
library(lattice)
library(ggplot2)
library(caret)
library(rattle)
install.packages("rattle")
install.packages("e1071")
df <- read.csv("./activity/activity.csv")
setwd("~/Desktop/Coursera/Course 5 Reproducible Research/Project 1/RepData_PeerAssessment1")
df <- read.csv("./activity/activity.csv")
library(reshape2)
meltedDf <- melt(df)
total <- dcast(meltedDf, date ~ variable , sum)
hist(total$steps, main = "Histogram of Total Number of Steps Taken Each Day", xlab = "Total Number of Steps Taken Each Day")
head(total)
mean(total$steps)
median(total$steps)
?mean
mean(total$steps, na.rm = TRUE)
median(total$steps, na.rm = TRUE)
average <- dcast(meltedDf, interval ~ variable , average)
average <- dcast(meltedDf, interval + date ~ variable , average)
library(dplyr)
df1 <- select(df, interval, steps)
df1$interval <- as.factor(df1$interval)
str(df1)
meltedDf1 <- melt(df1)
average <- dcast(meltedDf1, interval ~ variable , average)
average <- dcast(meltedDf1, interval ~ variable , mean)
head(average)
average <- dcast(meltedDf1, interval ~ variable , mean, na.rm =TRUE)
head(average)
str(average)
tail(average)
12*24
with(average, plot(interval, steps, xlab = "Interval", ylab = "Average Number of Steps Taken", pch = NA, lty = "l"))
with(average, plot(interval, steps, xlab = "Interval", ylab = "Average Number of Steps Taken", pch = NA, type= "l"))
?plot
with(average, lines(interval, steps))
with(average, plot(interval, steps, xlab = "Interval", ylab = "Average Number of Steps Taken", pch = NA))
with(average, lines(interval, steps))
with(average, plot(interval, steps, xlab = "Interval", ylab = "Average Number of Steps Taken", type ="l"))
with(average, plot(interval, steps, xlab = "Interval", ylab = "Average Number of Steps Taken", pch = NA))
with(average, plot(interval, steps, xlab = "Interval", ylab = "Average Number of Steps Taken"))
with(average, lines(interval, steps))
?max
max(average, na.rm = TRUE)
max(average$steps, na.rm = TRUE)
average[,max(average$steps, na.rm = TRUE)]
average[max(average$steps, na.rm = TRUE),]
average[steps == max(average$steps, na.rm = TRUE),]
average[average$steps == max(average$steps, na.rm = TRUE),]
average[average$steps == max(average$steps),]
sum(is.na(df))
dim(df)
head(is.na(df), n=50)
sum(is.na(df$steps))
install.packages("DMwR")
library(DMwR)
library(lattice)
library(DWwR
)
library(DMwR)
dfimputed <- knnImputation(df)
sum(is.na(df$steps))
sum(is.na(dfimputed$steps))
meltedDfimputed <- melt(dfimputed)
totalimputed <- dcast(meltedDfimputed, date ~ variable , sum)
hist(totalimputed$steps, main = "Histogram of Total Number of Steps Taken Each Day", xlab = "Total Number of Steps Taken Each Day")
mean(totalimputed$steps)
median(totalimputed$steps)
mean(total$steps, na.rm = TRUE)
median(total$steps, na.rm = TRUE)
mean(total$steps, na.rm = TRUE) - mean(totalimputed$steps)
median(total$steps, na.rm = TRUE) - median(totalimputed$steps)
(mean(total$steps, na.rm = TRUE) - mean(totalimputed$steps))/ mean(total$steps, na.rm = TRUE)
(median(total$steps, na.rm = TRUE) - median(totalimputed$steps))/ median(total$steps, na.rm = TRUE)
?weekdays
str(dfimputed)
weekdays(head(df$date), n=5)
weekdays(head(df$date, n=5))
dfimputed$date <- as.date(dfimputed$date)
dfimputed$date <- as.character(dfimputed$date)
str(dfimputed)
weekdays(head(dfimputed$date, n=5))
dfimputed$date <- as.date(as.character(dfimputed$date))
dfimputed$date <- as.POSIXlt(as.character(dfimputed$date))
str(dfimputed)
weekdays(head(dfimputed$date, n=5))
dfwkDE <- dfimputed %>% mutate(weekDE = weekdays(dfimputed$date))
str(dfimputed)
dfimputed$date <- as.POSIXct(as.character(dfimputed$date))
dfwkDE <- dfimputed %>% mutate(weekDE = weekdays(dfimputed$date))
head(dfwkDE)
?isWeekday
?wday
str(dfwkDE)
?sub
dfwkDE$weekDE <- as.factor(dfwkDE$weekDE)
str(dfwkDE)
levels(dfwkDE$weekDE) <- list(weekday = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"), weekend = c("Saturday", "Sunday"))
str(dfwkDE)
head(dfwkDE)
dfwkDE$interval <- as.factor(dfwkDE$interval)
str(dfwkDE)
dfwkDE1 <- select(dfwkDE, interval, weekDE, steps)
meltedWkDE <- melt(dfwkDE1)
averageWkDE <- dcast(meltedWkDE, interval + weekDE ~ variable , mean)
head(averageWkDE)
str(averageWkDE)
?xyplot
xyplot(steps ~ interval | weekDE, data = averageWkDE, type = "l", layout = c(1,2))
xyplot(steps ~ interval | weekDE, data = averageWkDE, type = "l", xlab = "Interval", ylab = "Average Number of Steps", scales$rot = 90, layout = c(1,2))
xyplot(steps ~ interval | weekDE, data = averageWkDE, type = "l", xlab = "Interval", ylab = "Average Number of Steps", scales = list(x = list(rot = 90)), layout = c(1,2))
xyplot(steps ~ interval | weekDE, data = averageWkDE, type = "l", xlab = "Interval", ylab = "Average Number of Steps", scales = list(x = list(rot = 90, tick.number = 12)), layout = c(1,2))
xyplot(steps ~ as.interger(interval) | weekDE, data = averageWkDE, type = "l", xlab = "Interval", ylab = "Average Number of Steps", scales = list(x = list(rot = 90, tick.number = 12)), layout = c(1,2))
xyplot(steps ~ as.integer(interval) | weekDE, data = averageWkDE, type = "l", xlab = "Interval", ylab = "Average Number of Steps", scales = list(x = list(rot = 90, tick.number = 12)), layout = c(1,2))
xyplot(steps ~ as.integer(as.character(interval)) | weekDE, data = averageWkDE, type = "l", xlab = "Interval", ylab = "Average Number of Steps", scales = list(x = list(rot = 90, tick.number = 12)), layout = c(1,2))
xyplot(steps ~ as.integer(as.character(interval)) | weekDE, data = averageWkDE, type = "l", xlab = "Interval", ylab = "Average Number of Steps", scales = list(x = list(rot = 90, tick.number = 6)), layout = c(1,2))
xyplot(steps ~ as.integer(as.character(interval)) | weekDE, data = averageWkDE, type = "l", xlab = "Interval", ylab = "Average Number of Steps", scales = list(x = list(rot = 90, tick.number = 24)), layout = c(1,2))
xyplot(steps ~ as.integer(as.character(interval)) | weekDE, data = averageWkDE, type = "l", xlab = "Interval", ylab = "Average Number of Steps", scales = list(x = list(rot = 90, tick.number = 12), limits = c(0,2400)), layout = c(1,2))
xyplot(steps ~ as.integer(as.character(interval)) | weekDE, data = averageWkDE, type = "l", xlab = "Interval", ylab = "Average Number of Steps", scales = list(x = list(rot = 90, tick.number = 12, limits = c(0,2400))), layout = c(1,2))
